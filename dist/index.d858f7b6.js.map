{"mappings":"AAAA,oBAAoB;AACpB,MAAM,YAAY;IAChB,QAAQ;IACR,OAAO;IACP,QAAQ;IACR,OAAO;IACP,MAAM;QAAC;QAAW;QAAY;KAAM;IACpC,+BAA+B;IAC/B,OAAO;QACL,MAAM;QACN,OAAO;QACP,OAAO;IACT;AACF;AAEA,6CAA6C;AAC7C,sCAAsC;AACtC,oCAAoC;AACpC,oCAAoC;AACpC,kCAAkC;AAElC,2DAA2D;AAC3D,MAAM,YAAY,UAAU,KAAK,CAAC,IAAI;AACtC,MAAM,aAAa,UAAU,KAAK,CAAC,KAAK;AACxC,MAAM,aAAa,UAAU,KAAK,CAAC,KAAK;AACxC,MAAM,eAAe,UAAU,IAAI,CAAC,MAAM;AAC1C,MAAM,WAAW,UAAU,IAAI,CAAC,EAAE;AAClC,MAAM,UAAU,UAAU,IAAI,CAAC,eAAe,EAAE;AAEhD,gDAAgD;AAChD,MAAM,YAAY,SAAS,CAAC,SAAS;AACrC,MAAM,WAAW,SAAS,CAAC,QAAQ;AACnC,MAAM,WAAW,SAAS,CAAC,QAAQ;AACnC,MAAM,UAAU,SAAS,CAAC,OAAO;AAEjC,qCAAqC;AACrC,UAAU,KAAK,GAAG;AAClB,UAAU,MAAM,GAAG;AACnB,UAAU,KAAK,CAAC,IAAI,GAAG;AACvB,UAAU,IAAI,CAAC,IAAI,CAAC;AAEpB,wDAAwD;AACxD,UAAU,IAAI,GAAG;AACjB,UAAU,KAAK,GAAG;AAClB,UAAU,QAAQ,GAAG,CAAC;AACtB,UAAU,QAAQ,CAAC,OAAO,GAAG;AAC7B,UAAU,QAAQ,CAAC,IAAI,GAAG;AAE1B,yEAAyE;AACzE,MAAM,OAAO;AACb,MAAM,QAAQ;AACd,MAAM,QAAQ;AACd,MAAM,OAAO;IAAC;IAAW;IAAY;CAAW;AAEhD,MAAM,UAAU;IACd;IACA;IACA;IACA;AACF;AAEA,2CAA2C;AAC3C,MAAM,iBAAiB;AACvB,MAAM,oBAAoB;AAE1B,MAAM,cAAc;IAClB,CAAC,eAAe,EAAE;IAClB,CAAC,kBAAkB,EAAE;AACvB;AAEA,4DAA4D;AAC5D,MAAM,aAAa;IACjB,OAAO;IACP,QAAQ;IACR,OAAO;AACT;AACA,MAAM,OAAO,EAAE;AACf,MAAM,SAAS,EAAE;AACjB,IAAK,MAAM,OAAO,WAAY;IAC5B,KAAK,IAAI,CAAC;IACV,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI;AAC7B;AAEA,4DAA4D;AAC5D,MAAM,SAAS,EAAE;AACjB,MAAM,WAAW,EAAE;AACnB,MAAM,SAAS;IACb,SAAS;AACX;AACA,MAAM,cAAc,OAAO,MAAM,CAAC;AAClC,YAAY,KAAK,GAAG;AACpB,YAAY,MAAM,GAAG;AACrB,YAAY,KAAK,GAAG;AAEpB,IAAK,MAAM,OAAO,YAChB,IAAI,YAAY,cAAc,CAAC,MAAM;IACnC,OAAO,IAAI,CAAC;IACZ,SAAS,IAAI,CAAC,WAAW,CAAC,IAAI;AAChC;AAGF,iDAAiD;AACjD,SAAS,WAAW,MAAM;IACxB,IAAI,YAAY;IAEhB,IAAK,MAAM,OAAO,OAChB,IAAI,OAAO,cAAc,CAAC,MACxB;IAGJ,OAAO;AACT;AAEA,MAAM,QAAQ,WAAW;IAAE,MAAM;IAAS,KAAK;AAAE;AACjD,sBAAsB;AAEtB,KAAK;AACL,MAAM,cAAc;IAClB,OAAO;IACP,QAAQ;IACR,OAAO;AACT;AACA,MAAM,WAAW,EAAE;AACnB,MAAM,SAAS,OAAO,IAAI,CAAC;AAE3B,8BAA8B;AAC9B,mBAAmB;AAEnB,2BAA2B;AAC3B,4BAA4B;AAC5B,IAAI;AAEJ,QAAQ,GAAG,CAAC","sources":["src/scripts/05.mjs"],"sourcesContent":["//deklaracja obiektu\r\nconst apartment = {\r\n  imgUrl: 'https://via.placeholder.com/640x480',\r\n  descr: 'Spacious apartment in the city center',\r\n  rating: 4,\r\n  price: 2153,\r\n  tags: ['premium', 'promoted', 'top'],\r\n  //deklaracja obiektu w obiekcie\r\n  owner: {\r\n    name: 'Henry',\r\n    phone: '982-126-1588',\r\n    email: 'henry.carter@aptmail.com',\r\n  },\r\n};\r\n\r\n//pobranie właściwości obiektu - obiekt.klucz\r\n// const aptRating = apartment.rating;\r\n// const aptDescr = apartment.descr;\r\n// const aptPrice = apartment.price;\r\n// const aptTags = apartment.tags;\r\n\r\n//pobranie zagnieżdżonej właściwości obiektu - obiekt.klucz\r\nconst ownerName = apartment.owner.name;\r\nconst ownerPhone = apartment.owner.phone;\r\nconst ownerEmail = apartment.owner.email;\r\nconst numberOfTags = apartment.tags.length;\r\nconst firstTag = apartment.tags[0];\r\nconst lastTag = apartment.tags[numberOfTags - 1];\r\n\r\n//pobranie właściwości obiektu - obiekt[\"nazwa\"]\r\nconst aptRating = apartment['rating'];\r\nconst aptDescr = apartment['descr'];\r\nconst aptPrice = apartment['price'];\r\nconst aptTags = apartment['tags'];\r\n\r\n//zmiana wartości właściwości obiektu\r\napartment.price = 5000;\r\napartment.rating = 4.7;\r\napartment.owner.name = 'Henry Sibola';\r\napartment.tags.push('trusted');\r\n\r\n//7. dodanie właściwości i wraz z wartościami do obiektu\r\napartment.area = 60;\r\napartment.rooms = 3;\r\napartment.location = {};\r\napartment.location.country = 'Jamaica';\r\napartment.location.city = 'Kingston';\r\n\r\n//8. tworzenie właściwości obiektu ze wcześniej zadeklarowanych zmiennych\r\nconst name = 'Repair Droid';\r\nconst price = 2500;\r\nconst image = 'https://via.placeholder.com/640x480';\r\nconst tags = ['on sale', 'trending', 'best buy'];\r\n\r\nconst product = {\r\n  name,\r\n  price,\r\n  image,\r\n  tags,\r\n};\r\n\r\n//9. dodanie właściwości o nieznanej nazwie\r\nconst emailInputName = 'email';\r\nconst passwordInputName = 'password';\r\n\r\nconst credentials = {\r\n  [emailInputName]: 'henry.carter@aptmail.com',\r\n  [passwordInputName]: 'jqueryismyjam',\r\n};\r\n\r\n//10. iteracja po obiekcie - dodanie keys i values do tablic\r\nconst apartment1 = {\r\n  descr: 'Spacious apartment in the city center',\r\n  rating: 4,\r\n  price: 2153,\r\n};\r\nconst keys = [];\r\nconst values = [];\r\nfor (const key in apartment1) {\r\n  keys.push(key);\r\n  values.push(apartment1[key]);\r\n}\r\n\r\n//11. iteracja po obiekcie - sprawdzanie własnej właściwości\r\nconst keys11 = [];\r\nconst values11 = [];\r\nconst advert = {\r\n  service: 'apt',\r\n};\r\nconst apartment11 = Object.create(advert);\r\napartment11.descr = 'Spacious apartment in the city center';\r\napartment11.rating = 4;\r\napartment11.price = 2153;\r\n\r\nfor (const key in apartment11) {\r\n  if (apartment11.hasOwnProperty(key)) {\r\n    keys11.push(key);\r\n    values11.push(apartment11[key]);\r\n  }\r\n}\r\n\r\n//12. funkcja zwracająca tylko własne właściwości\r\nfunction countProps(object) {\r\n  let propCount = 0;\r\n\r\n  for (const key in object) {\r\n    if (object.hasOwnProperty(key)) {\r\n      propCount++;\r\n    }\r\n  }\r\n  return propCount;\r\n}\r\n\r\nconst count = countProps({ name: 'Mango', age: 2 });\r\n// console.log(count);\r\n\r\n//13.\r\nconst apartment13 = {\r\n  descr: 'Spacious apartment in the city center',\r\n  rating: 4,\r\n  price: 2153,\r\n};\r\nconst values13 = [];\r\nconst keys13 = Object.keys(apartment13);\r\n\r\n// for (const key of keys13) {\r\n//   values13.push;\r\n\r\n//   // Wartość właściwości\r\n//   console.log(book[key]);\r\n// }\r\n\r\nconsole.log(keys13);\r\n"],"names":[],"version":3,"file":"index.d858f7b6.js.map","sourceRoot":"/__parcel_source_root/"}