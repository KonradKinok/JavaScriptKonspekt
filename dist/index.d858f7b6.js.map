{"mappings":"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","sources":["src/scripts/05.mjs"],"sourcesContent":["//deklaracja obiektu\r\nconst apartment = {\r\n  imgUrl: 'https://via.placeholder.com/640x480',\r\n  descr: 'Spacious apartment in the city center',\r\n  rating: 4,\r\n  price: 2153,\r\n  tags: ['premium', 'promoted', 'top'],\r\n  //deklaracja obiektu w obiekcie\r\n  owner: {\r\n    name: 'Henry',\r\n    phone: '982-126-1588',\r\n    email: 'henry.carter@aptmail.com',\r\n  },\r\n};\r\n\r\n//pobranie właściwości obiektu - obiekt.klucz\r\n// const aptRating = apartment.rating;\r\n// const aptDescr = apartment.descr;\r\n// const aptPrice = apartment.price;\r\n// const aptTags = apartment.tags;\r\n\r\n//pobranie zagnieżdżonej właściwości obiektu - obiekt.klucz\r\nconst ownerName = apartment.owner.name;\r\nconst ownerPhone = apartment.owner.phone;\r\nconst ownerEmail = apartment.owner.email;\r\nconst numberOfTags = apartment.tags.length;\r\nconst firstTag = apartment.tags[0];\r\nconst lastTag = apartment.tags[numberOfTags - 1];\r\n\r\n//pobranie właściwości obiektu - obiekt[\"nazwa\"]\r\nconst aptRating = apartment['rating'];\r\nconst aptDescr = apartment['descr'];\r\nconst aptPrice = apartment['price'];\r\nconst aptTags = apartment['tags'];\r\n\r\n//zmiana wartości właściwości obiektu\r\napartment.price = 5000;\r\napartment.rating = 4.7;\r\napartment.owner.name = 'Henry Sibola';\r\napartment.tags.push('trusted');\r\n\r\n//7. dodanie właściwości i wraz z wartościami do obiektu\r\napartment.area = 60;\r\napartment.rooms = 3;\r\napartment.location = {};\r\napartment.location.country = 'Jamaica';\r\napartment.location.city = 'Kingston';\r\n\r\n//8. tworzenie właściwości obiektu ze wcześniej zadeklarowanych zmiennych\r\n// const name = 'Repair Droid';\r\n// const price = 2500;\r\n// const image = 'https://via.placeholder.com/640x480';\r\n// const tags = ['on sale', 'trending', 'best buy'];\r\n\r\n// const product = {\r\n//   name,\r\n//   price,\r\n//   image,\r\n//   tags,\r\n// };\r\n\r\n//9. dodanie właściwości o nieznanej nazwie\r\nconst emailInputName = 'email';\r\nconst passwordInputName = 'password';\r\n\r\nconst credentials = {\r\n  [emailInputName]: 'henry.carter@aptmail.com',\r\n  [passwordInputName]: 'jqueryismyjam',\r\n};\r\n\r\n//10. iteracja po obiekcie - dodanie keys i values do tablic\r\nconst apartment1 = {\r\n  descr: 'Spacious apartment in the city center',\r\n  rating: 4,\r\n  price: 2153,\r\n};\r\nconst keys = [];\r\nconst values = [];\r\nfor (const key in apartment1) {\r\n  keys.push(key);\r\n  values.push(apartment1[key]);\r\n}\r\n\r\n//11. iteracja po obiekcie - sprawdzanie własnej właściwości\r\nconst keys11 = [];\r\nconst values11 = [];\r\nconst advert = {\r\n  service: 'apt',\r\n};\r\nconst apartment11 = Object.create(advert);\r\napartment11.descr = 'Spacious apartment in the city center';\r\napartment11.rating = 4;\r\napartment11.price = 2153;\r\n\r\nfor (const key in apartment11) {\r\n  if (apartment11.hasOwnProperty(key)) {\r\n    keys11.push(key);\r\n    values11.push(apartment11[key]);\r\n  }\r\n}\r\n\r\n//12. funkcja zwracająca tylko własne właściwości\r\nfunction countProps(object) {\r\n  let propCount = 0;\r\n\r\n  for (const key in object) {\r\n    if (object.hasOwnProperty(key)) {\r\n      propCount++;\r\n    }\r\n  }\r\n  return propCount;\r\n}\r\n\r\nconst count = countProps({ name: 'Mango', age: 2 });\r\n// console.log(count);\r\n\r\n//13. Metoda Object.keys(obj)\r\nconst apartment13 = {\r\n  descr: 'Spacious apartment in the city center',\r\n  rating: 4,\r\n  price: 2153,\r\n};\r\nconst values13 = [];\r\nconst keys13 = Object.keys(apartment13);\r\n\r\nfor (const key of keys13) {\r\n  values13.push(apartment13[key]);\r\n}\r\n// console.log(values13);\r\n\r\n//14. funkcja zwracająca tylko własne właściwości - Metoda Object.keys(obj)\r\nfunction countProps14(object) {\r\n  let propCount = 0;\r\n  const keys14 = Object.keys(object);\r\n  propCount = keys14.length;\r\n  return propCount;\r\n}\r\nconst count14 = countProps14({ name: 'Mango', age: 2 });\r\n// console.log(count14);\r\n\r\n//15. funkcja zwracająca tylko własne właściwości - Metoda Object.values(obj)\r\nconst apartment15 = {\r\n  descr: 'Spacious apartment in the city center',\r\n  rating: 4,\r\n  price: 2153,\r\n};\r\nconst keys15 = Object.keys(apartment15);\r\nconst values15 = Object.values(apartment15);\r\n// console.log(keys15, values15);\r\n\r\n//16. Funkcja powinna obliczyć łączną kwotę wynagrodzeń pracowników i zwrócić ją\r\nfunction countTotalSalary(salaries) {\r\n  let totalSalary = 0;\r\n  const keys16 = Object.keys(salaries);\r\n  const values16 = Object.values(salaries);\r\n  for (const key of keys16) {\r\n    totalSalary += salaries[key];\r\n  }\r\n  return totalSalary;\r\n}\r\n// console.log(countTotalSalary({ mango: 100, poly: 150, alfred: 80 }));\r\n\r\n// 17. Przeiteruj po tablicy obiektów colors używając pętli for...of\r\nconst colors = [\r\n  { hex: '#f44336', rgb: '244,67,54' },\r\n  { hex: '#2196f3', rgb: '33,150,243' },\r\n  { hex: '#4caf50', rgb: '76,175,80' },\r\n  { hex: '#ffeb3b', rgb: '255,235,59' },\r\n];\r\n\r\nconst hexColors = [];\r\nconst rgbColors = [];\r\nfor (const key of colors) {\r\n  hexColors.push(key.hex);\r\n  rgbColors.push(key.rgb);\r\n}\r\n// console.log(hexColors, rgbColors);\r\n\r\n//18. Poszukiwanie obiektu według wartości właściwości\r\nconst products = [\r\n  { name: 'Radar', price: 1300, quantity: 4 },\r\n  { name: 'Scanner', price: 2700, quantity: 3 },\r\n  { name: 'Droid', price: 400, quantity: 7 },\r\n  { name: 'Grip', price: 1200, quantity: 9 },\r\n];\r\n\r\nfunction getProductPrice(productName) {\r\n  for (const key of products) {\r\n    if (key.name === productName) {\r\n      return key.price;\r\n    }\r\n  }\r\n  return null;\r\n}\r\n// console.log(getProductPrice('Droid'));\r\n// console.log(getProductPrice('Engine'));\r\n\r\n//19. kolekcja wartości właściwości\r\nconst products19 = [\r\n  { name: 'Radar', price: 1300, quantity: 4 },\r\n  { name: 'Scanner', price: 2700, quantity: 3 },\r\n  { name: 'Droid', price: 400, quantity: 7 },\r\n  { name: 'Grip', price: 1200, quantity: 9 },\r\n];\r\n\r\nfunction getAllPropValues(propName) {\r\n  const returnTab = [];\r\n\r\n  for (const product of products19) {\r\n    const rowsProperties = Object.keys(product);\r\n\r\n    for (const property of rowsProperties) {\r\n      if (property === propName) {\r\n        returnTab.push(product[property]);\r\n      }\r\n    }\r\n  }\r\n  return returnTab;\r\n}\r\n// console.log(getAllPropValues('price'));\r\n// console.log(getAllPropValues('category'));\r\n\r\n//20.całkowity koszt towaru\r\nconst products20 = [\r\n  { name: 'Radar', price: 1300, quantity: 4 },\r\n  { name: 'Scanner', price: 2700, quantity: 3 },\r\n  { name: 'Droid', price: 400, quantity: 7 },\r\n  { name: 'Grip', price: 1200, quantity: 9 },\r\n];\r\n\r\nfunction calculateTotalPrice(productName) {\r\n  let cost = 0;\r\n\r\n  for (const product of products20) {\r\n    const rowsProperties = Object.keys(product);\r\n\r\n    for (const property of rowsProperties) {\r\n      if (product[property] === productName) {\r\n        cost = product.price * product.quantity;\r\n      }\r\n    }\r\n  }\r\n  return cost;\r\n}\r\n// console.log(calculateTotalPrice('Blaster'));\r\n// console.log(calculateTotalPrice('Radar'));\r\n\r\n//21. Destrukturyzacja\r\nconst highTemperatures = {\r\n  yesterday: 28,\r\n  today: 26,\r\n  tomorrow: 33,\r\n};\r\n// const { yesterday, today, tomorrow } = highTemperatures;\r\n// const meanTemperature = (yesterday + today + tomorrow) / 3;\r\n// console.log(meanTemperature);\r\n\r\n//22. Destrukturyzacja - dodatkowy parametr\r\nconst highTemperatures22 = {\r\n  yesterday: 28,\r\n  today: 26,\r\n  tomorrow: 33,\r\n};\r\n// const {\r\n//   yesterday,\r\n//   today,\r\n//   tomorrow,\r\n//   icon = 'https://www.flaticon.com/svg/static/icons/svg/2204/2204346.svg',\r\n// } = highTemperatures22;\r\n// const meanTemperature = (yesterday + today + tomorrow) / 3;\r\n// console.log(meanTemperature);\r\n\r\n//23. Destrukturyzacja - zmiana nazwy zmiennej\r\nconst highTemperatures23 = {\r\n  yesterday: 28,\r\n  today: 26,\r\n  tomorrow: 33,\r\n};\r\n// const {\r\n//   yesterday: highYesterday,\r\n//   today: highToday,\r\n//   tomorrow: highTomorrow,\r\n//   icon: highIcon = 'https://www.flaticon.com/svg/static/icons/svg/2204/2204346.svg',\r\n// } = highTemperatures23;\r\n// const meanTemperature = (highYesterday + highToday + highTomorrow) / 3;\r\n// console.log(meanTemperature);\r\n\r\n//24. Destrukturyzacja - wiele obiektów\r\nconst colors24 = [\r\n  { hex: '#f44336', rgb: '244,67,54' },\r\n  { hex: '#2196f3', rgb: '33,150,243' },\r\n  { hex: '#4caf50', rgb: '76,175,80' },\r\n  { hex: '#ffeb3b', rgb: '255,235,59' },\r\n];\r\n\r\nconst hexColors24 = [];\r\nconst rgbColors24 = [];\r\n\r\nfor (const color of colors) {\r\n  const { hex, rgb } = color;\r\n  hexColors24.push(hex);\r\n  rgbColors24.push(rgb);\r\n}\r\n// console.log(hexColors24, rgbColors24);\r\n\r\n//25. Destrukturyzacja - obiekty zagnieżdżone\r\nconst forecast = {\r\n  today: {\r\n    low: 28,\r\n    high: 32,\r\n    icon: 'https://www.flaticon.com/svg/static/icons/svg/861/861059.svg',\r\n  },\r\n  tomorrow: {\r\n    low: 27,\r\n    high: 31,\r\n  },\r\n};\r\n\r\nconst {\r\n  today: {\r\n    low: lowToday,\r\n    high: highToday,\r\n    icon: todayIcon = 'https://www.flaticon.com/svg/static/icons/svg/861/861059.svg',\r\n  },\r\n  tomorrow: {\r\n    low: lowTomorrow,\r\n    high: highTomorrow,\r\n    icon: tomorrowIcon = 'https://www.flaticon.com/svg/static/icons/svg/2204/2204346.svg',\r\n  },\r\n} = forecast;\r\n// console.log(lowToday);\r\n\r\n// 26. Wzorzec «Obiekt ustawień»\r\nfunction calculateMeanTemperature(forecast) {\r\n  const {\r\n    today: {\r\n      low: todayLow,\r\n      high: todayHigh,\r\n      icon: todayIcon = 'https://www.flaticon.com/svg/static/icons/svg/861/861059.svg',\r\n    },\r\n    tomorrow: {\r\n      low: tomorrowLow,\r\n      high: tomorrowHigh,\r\n      icon: tomorrowIcon = 'https://www.flaticon.com/svg/static/icons/svg/2204/2204346.svg',\r\n    },\r\n  } = forecast;\r\n  return (todayLow + todayHigh + tomorrowLow + tomorrowHigh) / 4;\r\n}\r\n\r\n// console.log(\r\n//   calculateMeanTemperature({\r\n//     today: { low: 28, high: 32 },\r\n//     tomorrow: { low: 25, high: 29 },\r\n//   })\r\n// );\r\n\r\n// 27. Składnia ... (spread)\r\nconst scores = [89, 64, 42, 17, 93, 51, 26];\r\n\r\n// const bestScore = Math.max(...scores);\r\n// const worstScore = Math.min(...scores);\r\n// console.log(worstScore, bestScore);\r\n\r\n// 28. Składnia ... (spread) -łączenie tablic\r\nconst firstGroupScores = [64, 42, 93];\r\nconst secondGroupScores = [89, 14, 51, 26];\r\nconst thirdGroupScores = [29, 47, 18, 97, 81];\r\n\r\nconst allScores = [\r\n  ...firstGroupScores,\r\n  ...secondGroupScores,\r\n  ...thirdGroupScores,\r\n];\r\nconst bestScore = Math.max(...allScores);\r\nconst worstScore = Math.min(...allScores);\r\n// console.log(allScores, worstScore, bestScore);\r\n\r\n// 29. Składnia ... (spread) -łączenie obiektów\r\nconst defaultSettings = {\r\n  theme: 'light',\r\n  public: true,\r\n  withPassword: false,\r\n  minNumberOfQuestions: 10,\r\n  timePerQuestion: 60,\r\n};\r\nconst overrideSettings = {\r\n  public: false,\r\n  withPassword: true,\r\n  timePerQuestion: 30,\r\n};\r\n\r\nconst finalSettings = { ...defaultSettings, ...overrideSettings };\r\n// console.log(finalSettings);\r\n\r\n// 30. Składnia ... (spread) - Karty zadań\r\nfunction makeTask(data) {\r\n  const completed = false;\r\n  const category = 'General';\r\n  const priority = 'Normal';\r\n\r\n  const task = {\r\n    category: category,\r\n    priority: priority,\r\n    completed: completed,\r\n  };\r\n\r\n  const finalSettings = { ...task, ...data };\r\n  return finalSettings;\r\n}\r\n// console.log(makeTask({}));\r\n// console.log(\r\n//   makeTask({\r\n//     category: 'Homemade',\r\n//     priority: 'Low',\r\n//     text: 'Take out the trash',\r\n//   })\r\n// );\r\n\r\n// 31. Operacja ... (rest)\r\nfunction add(...args) {\r\n  let sum = 0;\r\n  for (let i = 0; i < args.length; i++) {\r\n    sum += args[i];\r\n  }\r\n  return sum;\r\n}\r\n// console.log(add(12, 4, 11, 48));\r\n\r\n// 32. Operacja ... (rest) - część argumentów\r\nfunction addOverNum(...args) {\r\n  let total = 0;\r\n\r\n  for (const arg of args) {\r\n    if (args[0] < arg) {\r\n      total += arg;\r\n    }\r\n  }\r\n\r\n  return total;\r\n  // Change code above this line\r\n}\r\n// console.log(addOverNum(10, 12, 4, 11, 48, 10, 8));\r\n\r\n// 33. Operacja ... (rest) - Tablica dopasowań\r\nfunction findMatches(...args) {\r\n  const matches = [];\r\n\r\n  for (let i = 0; i < args[0].length; i++) {\r\n    let firstTableNum = args[0][i];\r\n\r\n    for (let j = 1; j < args.length; j++) {\r\n      if (firstTableNum === args[j]) {\r\n        matches.push(args[j]);\r\n      }\r\n    }\r\n  }\r\n  return matches;\r\n}\r\n// console.log(findMatches([1, 2, 3, 4, 5], 1, 8, 2, 7));\r\n\r\n// 34. Metody obiektów\r\nconst bookShelf = {\r\n  books: ['The last kingdom', 'The guardian of dreams'],\r\n  getBooks() {\r\n    return 'Returning all books';\r\n  },\r\n  addBook(bookName) {\r\n    return `Adding book ${bookName}`;\r\n  },\r\n  removeBook(bookName) {\r\n    return `Deleting book ${bookName}`;\r\n  },\r\n  updateBook(oldName, newName) {\r\n    return `Updating book ${oldName} to ${newName}`;\r\n  },\r\n};\r\n\r\n// 35. Metody obiektów - this\r\nconst bookShelf35 = {\r\n  books: ['The last kingdom', 'Haze', 'The guardian of dreams'],\r\n  updateBook(oldName, newName) {\r\n    // Change code below this line\r\n    // Change code above this line\r\n  },\r\n};\r\n"],"names":[],"version":3,"file":"index.d858f7b6.js.map","sourceRoot":"/__parcel_source_root/"}